((t,e)=>{const s=!1,a=document.body;let i,o,n=[];const d="in-view",r="out-of-view",c="track-view";t.addEventListener("DOMContentLoaded",(()=>{i=e.querySelectorAll(".wpg-reanimate")})),t.addEventListener("elementor/frontend/init",(()=>{l()}));const l=()=>{i.forEach((t=>{b(t)}))};t.addEventListener("resize",(()=>{n.forEach((t=>{t.disconnect()})),n=[],l()}));const v=(e,s)=>{const a=new CustomEvent(e,{detail:s});t.dispatchEvent(a)},b=t=>{const e={mobile:{css:!t.hasAttribute("data-mobile-disable-css"),events:!t.hasAttribute("data-mobile-disable-events")},tablet:{css:!t.hasAttribute("data-tablet-disable-css"),events:!t.hasAttribute("data-tablet-disable-events")},desktop:{css:!t.hasAttribute("data-desktop-disable-css"),events:!t.hasAttribute("data-desktop-disable-events")}};o=a.dataset.elementorDeviceMode;const s=(t.dataset.ioTop?t.dataset.ioTop:"-20%")+" 0px "+(t.dataset.ioBottom?t.dataset.ioBottom:"-20%")+" 0px",i=t.dataset.eventPrefix?t.dataset.eventPrefix+"_":"",l=i+c+"/in",b=i+c+"/out";let u=new IntersectionObserver(((s,a)=>{s.forEach((s=>{s.isIntersecting?(e[o].events&&v(l,s),e[o].css&&(t.classList.add(d),t.classList.remove(r))):(e[o].events&&v(b,s),e[o].css&&(t.classList.remove(d),t.classList.add(r)))}))}),{root:null,rootMargin:s,threshold:1e-4});u.observe(t),n.push(u);const h=t.querySelector("*:first-child"),m=t.getAttribute("style");h.setAttribute("style",m),t.classList.add("vpa-initalized")}})(window,document);
